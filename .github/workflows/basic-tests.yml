name: Basic Tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  # release:
  #   types: [published]
  # schedule:
    # First Sunday of every month
    # See: https://crontab.guru/#0_0_1-7_*_*/7
    # - cron: '0 0 1-7 * */7'  # https://stackoverflow.com/a/73826599
    # # Every Monday
    # - cron: 0 0 * * 1

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages on called workflows
# permissions:
#   contents: read
#   pages: write
#   id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Lint
        run: |
          yarn lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Typecheck
        run: |
          yarn typecheck

  prepare-test:
    runs-on: ubuntu-latest
    outputs:
      workspace_locations: ${{ steps.list_packages.outputs.output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          skip_yarn_install: true
      - name: List packages with tests
        id: list_packages
        run: |
          # Initialize an empty array to store locations with a test script
          workspace_locations_with_test=()

          # Process each workspace location from the 'yarn workspaces list --json' output
          while IFS= read -r line; do
            # Extract the workspace location, excluding the root
            workspace_location=$(echo "$line" | jq -r 'select(.location != ".") | .location')

            # Check if 'package.json' exists and contains a 'test' script
            if [ -f "$workspace_location/package.json" ] && jq -e '.scripts.test' "$workspace_location/package.json" > /dev/null; then
              # Add the workspace location to the array
              workspace_locations_with_test+=("$workspace_location")
            fi
          done < <(yarn workspaces list --json)

          # Convert the array of locations into a JSON array
          echo "output=$(jq -cn --argjson paths "$(jq -n '$ARGS.positional' --args "${workspace_locations_with_test[@]}")" '$paths')" >> $GITHUB_OUTPUT

  test:
    needs: prepare-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.prepare-test.outputs.workspace_locations) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Test
        run: |
          cd ${{ matrix.dir }}
          yarn test

  # test:
  #   strategy:
  #     matrix:
  #       command:
  #         - lint
  #         - typecheck
  #         - test
  #       dir:
  #         - packages/sum
  #         - packages/plus-two
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup Environment
  #       uses: ./.github/actions/setup-environment
  #     - name: Run
  #       run: |
  #         cd ${{ matrix.dir }}
  #         yarn g:${{ matrix.command }}
